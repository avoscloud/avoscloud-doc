{% set service_name = '{{service_name}}' %}
{% set order_Id = '{{order_Id}}' %}
{% set guest_name = '{{guest_name}}' %}
{% set guest_phone = '{{guest_phone}}' %}
{% set payment_create_time = '{{payment_create_time}}' %}
{% set rent_price = '{{rent_price}}' %}
{% set rent_addr = '{{rent_addr}}' %}
{% set download_link = '{{download_link}}' %}
{% set phase = '{{phase}}' %}
{% set num = '{{num}}' %}
{% set date = '{{date}}' %}
# {% block language %}{% endblock %} - 短信服务使用指南

LeanCloud 短信服务支持的应用场景有以下 3 种：
* **用户验证** 例如微信，陌陌等在登录时需要向用户发送一条包含了验证码的短信，再引导用户输入进行安全认证，以及修改密码等数据安全相关的操作
* **操作验证** 例如银行金融类应用，用户在针对金钱进行敏感操作（例如转账，消费等）时，需要通过验证码来验证是否为用户本人操作
* **通知公告** 例如淘宝某卖家在发货之后会用短信的方式将快递单，订单号，发货时间等发给买家，以达到良好的购买体验

另外，**严令禁止**短信涉及到以下内容的：

* **政治敏感**
* **极端言论**
* **淫秽色情**
* **传销诈骗**
* **封建迷信**
* **造谣诽谤**
* **我国现行法律、行政法规、政策禁止的内容**

我们重申：
> 
LeanCloud 需要审核短信内容，并且保留对发送人追究相关法律责任的权力！

开发者在设置短信内容的时候，文字表述上应该做到规范、正确、简洁。

## 短信服务配置
首先，打开 `控制台`，选中一个应用，进入`设置`，然后点击 `安全中心`，首先如下图所示：

![sms_switch](images/sms_switch_setting.png)

然后点击 `应用选项` ，查看短信相关选项，如下图：

![sms_setting](images/sms_setting_option.png)

针对上图，我们来做详细介绍。
（选项默认被勾选表示开启短信服务之后，该项默认也是开启的）

- 【&check;】**验证注册用户手机号码**  
  开启：调用 `AVUser` 注册相关的接口时，如果传入了手机号，则系统会自动发送验证短信，然后开发者需要手动调用一下验证接口之后，如此做在 `_User` 表中的 `mobilePhoneVerified` 值会被置为 `true`。  
  关闭：调用 `AVUser` 注册相关的接口不会发送短信。

- **禁止未验证手机号码登录**  
  开启：未验证手机号的 `AVUser` 不能使用「手机号+密码」以及「手机号+短信验证码」的方式登录，但是<span style="border-bottom:1px solid #333; padding-bottom:2px">用户名搭配密码的登录方式不会失败</span>。  
  关闭：不会对登录接口造成任何影响。

- **允许用户使用手机短信登录**  
  开启：`AVUser` 可以使用手机号搭配短信验证码的方式登录。  
  关闭：`AVUser` 不能直接使用。

- 【&check;】**启用账号无关短信验证服务（针对 requestSmsCode 和 verifySmsCode 接口）**  
  开启：开发者可以使用短信进行验证功能的开发，比如，敏感的操作认证、异地登录、付款验证等业务相关的需求。  
  关闭：请求验证发送短信以及验证短信验证码都会被服务端拒绝，但是请注意，跟用户相关的验证与该选项无关。

- **允许未验证手机号码用户通过短信重置密码**  
  开启：允许尚未验证过手机号的 `AVUser` 通过短信验证码实现重置密码的功能。  
  关闭：`AVUser` 必须在使用短信重置密码之前，先行验证手机号，也就是 `mobilePhoneVerified` 字段必须是 `true` 的前提下，才能使用短信重置密码。

了解以上配置项有助于开发者在功能选择上针对业务需求做调整。

接下来，我们根据不同的需求逐个介绍短信服务的功能。

## 验证类
用户验证是一个移动应用最基本的功能，传统的账号和密码登录在一般的应用场景下尚且可以满足需求，但是相对于社交类，照片存储类，金融类等应用中，用户往往会随着使用时间，会有较多的个人信息会在应用中留下记录，最简单的场景：微信在发现用户忽然在一台从未授权过的新设备上登录了，在用户开启了安全验证的功能之后，会向用户的手机号发一条验证短信，以验证当前登录是否为用户本人操作的，而微信是一个较为私密的社交应用，随着用户微信的使用时间的累计，用户的手机号，用户和好友之间的聊天记录都可能涉及到更为私密的信息，因此，开发者在产品开发过程中难免也会产生跟微信类似的需求。

### 注册验证
1. **用户输入手机号以及密码**  
  引导用户正确的输入，建议在调用 SDK 接口之前，验证一下手机号的格式。

2. **调用 AVUser 的注册接口，传入手机号以及密码**  
  {% block avuser_signup_send_sms %}{% endblock %}

3. **云端发送手机验证码，并且返回注册成功，但是此时用户的 `mobilePhoneVerified` 依然是 `false`，客户端需要引导用户去输入验证码。**

4. **用户再一次输入验证码**  
  最好验证一下是否为纯数字。
  
5. **调用验证接口，检查用户输入的纯数字验证码的合法性。**
  {% block avuser_signup_sms_verify %}{% endblock %}

以上是一个通用的带有手机号验证的注册过程。开发者可以根据自己的需求减少或者增加步骤，但是推荐开发者在使用这个功能的时候，首先需要明确是否需要勾选 **验证注册用户手机号码**。因为一旦勾选，只要调用了 AVUser 相关的注册账号，并且传入了手机号，云端就会自动发送短信验证码。

另外，假如注册的时候并没有强制用户验证手机号，而是在用户使用某一个功能的时候，要求用户验证手机号，也可以调用接口进行「延迟验证」，验证之后 `mobilePhoneVerified` 就会被置为 `true`

1. **请求发送验证码**
  {% block avuser_request_sms_code %}{% endblock %}
  
2. **调用验证接口验证用户输入的纯数字的验证码**
  {% block avuser_verify_sms_code %}{% endblock %}
  

#### 没收到注册验证短信？
一般来说，用户收到的注册验证短信内容为：

```
【AppName】欢迎使用 AppName 服务，您的安全码是 123456，请输入完成验证。
```
其中 `AppName` 是应用的名称，如果这个名称超过5个汉字（10个字符）的长度，就会因为签名太长而被短信供应商拒绝发送。修改应用名称 [**设置**](https://leancloud.cn/app.html?appid={{appid}}#/general) 中的 **应用名称** 中修改。

### 操作认证

比如开头提到的微信的新设备登录，支付宝的新设备的第一次支付认证等跟应用内业务逻辑紧密相关的验证操作，一般都跟用户的敏感信息相关，出于对用户信息以及金融安全的考虑，短信验证往往会比较可信，因此 LeanCloud 也提供了一系列的接口。

操作认证的步骤一般如下，我们拿某一个购物应用来举例：

1. **用户点击支付订单**  
  发起敏感操作
2. **调用接口发送验证短信**  
  注意，在这一步之前我们都假设了当前用户已经设置过手机号的，因此推荐就是这类应用在注册的时候，尽量要求用户以手机号作为用户名，否则在支付界面上还需要用户在首次购买的时候输入一次手机号。

  {% block operation_request_sms_code %}{% endblock %}

3. **用户收到短信，并且输入了验证码**  
  在进行第 4 步的之前，我们依然建议先进行客户端验证，这样避免了错误的验证码被服务端驳回而产生的流量，以及与服务端沟通的时间，有助于提升用户体验。
4. **调用接口验证用户输入的验证码是否有效**  
  {% block operation_verify_sms_code %}{% endblock %}

### 操作认证
比如开头提到的微信的新设备登录，支付宝的新设备的第一次支付认证等跟应用内业务逻辑紧密相关的验证操作，一般都跟用户的敏感信息相关，出于对用户信息以及金融安全的考虑，短信验证往往会比较可信，因此 LeanCloud 也提供了一系列的接口。

操作认证的步骤一般如下，我们拿某一个购物应用来举例：

**1.用户点击支付订单**
发起敏感操作

**2.调用接口发送验证短信**
注意，在这一步之前我们都假设了当前用户已经设置过手机号的，因此推荐就是这类应用在注册的时候，尽量要求用户以手机号作为用户名，否则在支付界面上还需要用户在首次购买的时候输入一次手机号。

{% block operation_request_sms_code %}{% endblock %}

**3.用户收到短信，并且输入了验证码**
在进行第 4 步的之前，我们依然建议先进行客户端验证，这样避免了错误的验证码被服务端驳回而产生的流量，以及与服务端沟通的时间，有助于提升用户体验。

**4.调用接口验证用户输入的验证码是否有效**

{% block operation_verify_sms_code %}{% endblock %}

针对上述的需求，可以把场景换成异地登录验证，修改个人敏感信息验证等一些常见的场景，步骤是类似的，调用的接口也是一样的，仅仅是在做 UI 展现的时候需要开发者自己去优化验证过程。


## 通知类
通知类短信是很多人每天都可能收到的信息，例如联通用户从外地进入上海可能会收到如下短信：

```
尊敬的用户：欢迎您来到上海，如需帮助请拨打客服热线10010或登录www.10010.com，优惠订购机票酒店请拨打116114。中国联通
```

这是通信商自己列出的一个通知类短信的规范案例。
通知类短信在实际使用的过程中，往往会因为措辞不当造成被短信服务商拒绝发送，甚至将开发者发送过去的请求直接屏蔽，因此，LeanCloud 在发送推广类的短信的时候是**需要审核**的。

### 自定义短信内容
通过短信模板可以自定义短信的内容。因为短信模板是由开发者自己定义的，因此为了确保平台的安全以及稳定，我们的短信模板是由**专人进行审核**的，只有**通过审核**之后，在接口里面调用才会成功发送。

#### 创建模板
创建模板的在控制台位置如下

![sms_template](images/sms_template.png)

要创建短信模板，进入控制台，选择一个应用，再选择 [**消息** > **短信** > **设置**](http://leancloud.cn/messaging.html?appid={{appid}}#/message/sms/conf)。

假设您提交了如下的短信模板，并且将这个模板的名称保存为"Notice_Template"：

<pre ng-non-bindable ><code>
尊敬的用户，你购买的服务《{{service_name}}》（订单号{{order_Id}}）
</code></pre>

#### 使用模板

等待审批通过之后可以通过如下代码来使用刚才创建的模板：

{% block send_sms_by_template %}{% endblock %}

#### 模板规范
这一章节介绍的内容是很多开发者容易忽略的重点知识。
因为开发者的应用场景各异，因此就会出现很多不规范的短信模板，因此我们整理了以下的范例用来说明如何规范短信模板。


正确范例1：

<pre ng-non-bindable ><code>
XX房东您好，租客{{guest_name}}（手机号码：{{guest_phone}}）于{{payment_create_time}}向您支付了房租。租金为{{rent_price}}元,房屋地址在{{rent_addr}}。请关注微信公众号: XX租房。XX租房APP下载地址：http://example.com/download.html#/app/download
</code></pre>

错误示例1：

<pre ng-non-bindable ><code>
尊敬的会员您好，您的订单（订单号{{orderId}}）已确认支付。5周年庆新品降价！大牌奢品上演底价争霸，低至2折！ BV低至888元！阿玛尼低至199元！都彭长款钱包仅售499元！杜嘉班纳休闲鞋仅售1399元！周年庆家居专场千元封顶现已开启！ {{download_link}} 客服电话400-881-6609 回复TD退订
</code></pre>


错误点：
1. 通知内容中包含了推广信息（「打折」、「降价」、「仅售」这些词语相对敏感，请谨慎使用）
2. 下载链接不可以是变量，下载连接是最为敏感的信息，为了确保安全，防止病毒以及不良信息传播，**LeanCloud 一律禁止下载链接作为变量的短信模板**。

正确范例2：

<pre ng-non-bindable ><code>
恭喜您获得关注广州体彩微信送“排列三”的活动彩票，您的号码是第{{phase}}期的：{{num}}。开奖时间为{{date}}，请关注公众号—开奖信息查询中奖状态。
</code></pre>

错误示例2：

<pre ng-non-bindable ><code>
您好，本条短信来自“XX旅游”~恭喜幸运的您，在本次“北海道机票”抽奖活动中，获得二等奖——定制星巴克杯! 请您关注我们的微信公众号（XX旅游：xx_app)，回复“中奖名单”即可查看详细中奖名单及领取须知！后续还会有更多活动惊喜，期待您的参与~官方网站：xxsite.cn
</code></pre>

错误点：抽奖中奖信息格外敏感，这类信息审核标准很难统一，但是为了确保平台安全，开发者措辞文案需要慎重。

另外，有一些行业相关的敏感词语是不允许发送的：

错误示例3：

<pre ng-non-bindable ><code>
业主还在苦苦等待你的反馈，你认领的房源已超过1小时没有填写核实结果，请尽快登录XX客户端，在“业主--待处理”列表中进行填写。【XX网】
</code></pre>

错误点：包含了「房源」这个敏感词，一般来说包含了「房源」、「借贷」等敏感词的很难被审核通过，请酌情修改措辞。

### 短信签名说明

短信签名是指短信内容里 `【】` 括起来的短信发送方名称，如果没有明确在模板里指定，默认就是你的应用名称。短信签名**不能超过 10 个字符，不能有任何非文字字符，也不可以是变量**。应用名称可以在应用设置里修改，并且短信签名**必须出现在短信内容的开头或者结尾。**

{% block sms_demo %}{% endblock %}
## 常见问题

详情请参照 [短信收发常见问题一览](rest_sms_api.html#常见问题_FAQ)。